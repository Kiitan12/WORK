// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  // Static method to get the FirebaseOptions for the current platform
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      // Throw an error if the platform is web
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android; // Return FirebaseOptions for Android platform
      case TargetPlatform.iOS:
        return ios; // Return FirebaseOptions for iOS platform
      case TargetPlatform.macOS: // Throw an error if the platform is macos
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows: // Throw an error if the platform is Windows
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux: // Throw an error if the platform is linux
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default: // Throw an error if the platform is not supported
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // FirebaseOptions for Android platform
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDy0FqsQdbQAo8UO98pQ37USPsxlvZcWfA',
    appId: '1:283636591280:android:6e04be248fe5fcb78ee975',
    messagingSenderId: '283636591280',
    projectId: 'volun-tek',
    storageBucket: 'volun-tek.appspot.com',
  );

  // FirebaseOptions for iOS platform
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyA40ij2mGY82GeyixIcidpO9Lp7HyFnRdw',
    appId: '1:283636591280:ios:1f1913a11807ebc98ee975',
    messagingSenderId: '283636591280',
    projectId: 'volun-tek',
    storageBucket: 'volun-tek.appspot.com',
    iosBundleId: 'com.volunteer.tek',
  );
}
